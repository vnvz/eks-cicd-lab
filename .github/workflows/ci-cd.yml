name: CI/CD para EKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION:    eu-central-1
  ECR_REPOSITORY: getting-started

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do cÃ³digo
      uses: actions/checkout@v3

    - name: Configure credenciais AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: github-actions

    - name: Obter URL do ECR
      id: ecr
      run: |
        echo "::set-output name=url::$(aws ecr describe-repositories \
          --repository-names $ECR_REPOSITORY \
          --region $AWS_REGION \
          --query 'repositories[0].repositoryUri' \
          --output text)"

    - name: Login no ECR
      run: |
        aws ecr get-login-password \
          --region $AWS_REGION | docker login \
          --username AWS \
          --password-stdin ${{ steps.ecr.outputs.url }}

    - name: Pull da imagem do Docker Hub
      run: |
        docker pull vnvzz/getting-started:latest

    - name: Tag e push para ECR
      run: |
        IMAGE_TAG=${GITHUB_SHA::8}
        docker tag vnvzz/getting-started:latest \
          ${{ steps.ecr.outputs.url }}:$IMAGE_TAG
        docker push ${{ steps.ecr.outputs.url }}:$IMAGE_TAG
        echo "IMAGE=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Configure kubectl para o EKS
      uses: aws-actions/eks-update-kubeconfig@v2
      with:
        region:      ${{ env.AWS_REGION }}
        cluster-name: eksDeepDiveFrankfurt

    - name: Atualizar Deployment no Kubernetes
      run: |
        kubectl set image deployment/getting-started-app \
          getting-started=${{ steps.ecr.outputs.url }}:$IMAGE \
          --namespace default
